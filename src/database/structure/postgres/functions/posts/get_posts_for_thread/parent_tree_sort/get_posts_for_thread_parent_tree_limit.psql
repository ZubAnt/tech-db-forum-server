CREATE OR REPLACE FUNCTION get_posts_for_thread_parent_tree_limit(p_thread_id INT, p_limit INT)
RETURNS TABLE(post_id INT,
              thread_id INT,
              forum_id INT,
              user_id INT,
              parent_id INT,
              message TEXT,
              created TIMESTAMP WITH TIME ZONE,
              is_edited BOOLEAN)
AS
$BODY$
  BEGIN

    RETURN QUERY

    WITH RECURSIVE recursive_post(post_id, thread_id, forum_id,
                   user_id, parent_id, message, created, is_edited, path, rn) AS (

        SELECT ps.post_id, ps.thread_id, ps.forum_id, ps.user_id,
               ps.parent_id, ps.message, ps.created, ps.is_edited,
               ps.path, ROW_NUMBER() OVER(ORDER BY ps.post_id)

        FROM posts ps
        WHERE ps.thread_id = p_thread_id and ps.parent_id = 0

      UNION ALL

        SELECT pst.post_id, pst.thread_id, pst.forum_id, pst.user_id,
               pst.parent_id, pst.message, pst.created, pst.is_edited,
               pst.path, rec.rn

        FROM posts pst
        JOIN recursive_post rec ON pst.parent_id = rec.post_id
        WHERE rn <= p_limit
    )

    SELECT rec.post_id, rec.thread_id, rec.forum_id, rec.user_id,
           rec.parent_id, rec.message, rec.created, rec.is_edited
    FROM recursive_post rec ORDER BY rec.path;

  END;
$BODY$
LANGUAGE plpgsql VOLATILE;